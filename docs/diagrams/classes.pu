@startuml classes

class App
{
    +run()
}

class Image
{
    +path : str
    +image : np.array
}

class Config
{
    +form_dict(d: dict) -> Config
    +process_image(image: Image, output_dir: str) -> void
    +process_images(images: List[Image], output_dir: str) -> void
}

class Chain
{
    +operations: List[Operation]
    +form_dict(d: dict) -> Chain
    +process(image: Image, output_dir: str) -> void
}

interface Operation
{
    + TYPE : str
    + save_result : bool
    +form_dict(d: dict) -> Operation
    +process(Image) -> Image
}

package "Pixel Operations" <<Rectangle>>
{
    class GammaCorrection
    class Blur
    class GaussianBlur
    class Tint
}

package "Geometrical Operations" <<Rectangle>>
{
    class Rotation
    class Crop
    class Resize
}

class Macro
{
    + TYPE : str
    + save_result : bool
    + chain : Chain
    +form_dict(d: dict) -> Macro
    +process(Image) -> Image
}

App --> Image : 1..n
App -> Config

Config --> Chain : 1..n
Config --> Macro : 1..n

Chain --> Operation : 1..n
Macro -> Chain

Operation <|.. Rotation
Operation <|.. Tint
Operation <|.. Crop
Operation <|.. Blur
Operation <|.. GaussianBlur
Operation <|.. GammaCorrection
Operation <|.. Resize
Macro ..|> Operation


@enduml